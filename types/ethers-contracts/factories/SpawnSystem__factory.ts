/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SpawnSystem, SpawnSystemInterface } from "../SpawnSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "arguments",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161069438038061069483398101604081905261002f9161010b565b600280546001600160a01b0319163317905581816001600160a01b0381161561005857806100ba565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610096573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ba9190610145565b600080546001600160a01b039283166001600160a01b031991821617909155600180549490921693169290921790915550610169915050565b6001600160a01b038116811461010857600080fd5b50565b6000806040838503121561011e57600080fd5b8251610129816100f3565b602084015190925061013a816100f3565b809150509250929050565b60006020828403121561015757600080fd5b8151610162816100f3565b9392505050565b61051c806101786000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806309c5eabe1461003b5780638da5cb5b14610064575b600080fd5b61004e610049366004610347565b61007f565b60405161005b91906103dc565b60405180910390f35b6002546040516001600160a01b03909116815260200161005b565b60008054606091906100ba906001600160a01b03167f7e8e7c9969e0c310afdcb6eda1d64a4b2de16d6efa693ae872ce6315c474871561021a565b60008054919250906100f5906001600160a01b03167f6a7cc323a056ef9c1378d529556aaabce7ccad47d7a9f011ed1a41766f374ac761021a565b6040805180820182526000808252602082019081529151633346dcb160e21b815233600482015290516024820152905160448201529091506001600160a01b0383169063cd1b72c490606401600060405180830381600087803b15801561015b57600080fd5b505af115801561016f573d6000803e3d6000fd5b5050604080516080810182526000808252602082019081526702c68af0bb140000828401818152606084019182529351630e9c9cd160e21b8152336004820152925160248401529051604483015291516064820152905160848201526001600160a01b0384169250633a727344915060a401600060405180830381600087803b1580156101fb57600080fd5b505af115801561020f573d6000803e3d6000fd5b505050505050919050565b604051637defd0f560e11b81526004810182905260009081906001600160a01b0385169063fbdfa1ea90602401600060405180830381865afa158015610264573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261028c919081019061042a565b905080516000036102d75760405162461bcd60e51b81526020600482015260116024820152701a59081b9bdd081c9959da5cdd195c9959607a1b604482015260640160405180910390fd5b6102f8816000815181106102ed576102ed6104d0565b602002602001015190565b949350505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561033f5761033f610300565b604052919050565b6000602080838503121561035a57600080fd5b823567ffffffffffffffff8082111561037257600080fd5b818501915085601f83011261038657600080fd5b81358181111561039857610398610300565b6103aa601f8201601f19168501610316565b915080825286848285010111156103c057600080fd5b8084840185840137600090820190930192909252509392505050565b600060208083528351808285015260005b81811015610409578581018301518582016040015282016103ed565b506000604082860101526040601f19601f8301168501019250505092915050565b6000602080838503121561043d57600080fd5b825167ffffffffffffffff8082111561045557600080fd5b818501915085601f83011261046957600080fd5b81518181111561047b5761047b610300565b8060051b915061048c848301610316565b81815291830184019184810190888411156104a657600080fd5b938501935b838510156104c4578451825293850193908501906104ab565b98975050505050505050565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220c1f39d5be4a65ef9802fdd4589c8ad28795ed7a761da1ce7379866ea128b7b8664736f6c63430008100033";

type SpawnSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SpawnSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SpawnSystem__factory extends ContractFactory {
  constructor(...args: SpawnSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "SpawnSystem";
  }

  deploy(
    _world: string,
    _components: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SpawnSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<SpawnSystem>;
  }
  getDeployTransaction(
    _world: string,
    _components: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  attach(address: string): SpawnSystem {
    return super.attach(address) as SpawnSystem;
  }
  connect(signer: Signer): SpawnSystem__factory {
    return super.connect(signer) as SpawnSystem__factory;
  }
  static readonly contractName: "SpawnSystem";
  public readonly contractName: "SpawnSystem";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SpawnSystemInterface {
    return new utils.Interface(_abi) as SpawnSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SpawnSystem {
    return new Contract(address, _abi, signerOrProvider) as SpawnSystem;
  }
}
