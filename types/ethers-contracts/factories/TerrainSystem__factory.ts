/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TerrainSystem, TerrainSystemInterface } from "../TerrainSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "arguments",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "x",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "y",
            type: "int256",
          },
        ],
        internalType: "struct Coord[]",
        name: "coords",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "int256",
            name: "x",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "y",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "width",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "height",
            type: "int256",
          },
        ],
        internalType: "struct Collider[]",
        name: "colliders",
        type: "tuple[]",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610b71380380610b7183398101604081905261002f9161010b565b600280546001600160a01b0319163317905581816001600160a01b0381161561005857806100ba565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610096573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ba9190610145565b600080546001600160a01b039283166001600160a01b031991821617909155600180549490921693169290921790915550610169915050565b6001600160a01b038116811461010857600080fd5b50565b6000806040838503121561011e57600080fd5b8251610129816100f3565b602084015190925061013a816100f3565b809150509250929050565b60006020828403121561015757600080fd5b8151610162816100f3565b9392505050565b6109f9806101786000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806309c5eabe146100465780631383c39d1461006f5780638da5cb5b14610082575b600080fd5b6100596100543660046103f8565b61009d565b604051610066919061048d565b60405180910390f35b61005961007d3660046105a2565b61024c565b6002546040516001600160a01b039091168152602001610066565b6060600080838060200190518101906100b69190610712565b60008054929450909250906100f4906001600160a01b03167f7e8e7c9969e0c310afdcb6eda1d64a4b2de16d6efa693ae872ce6315c474871561027f565b600080549192509061012f906001600160a01b03167f6a7cc323a056ef9c1378d529556aaabce7ccad47d7a9f011ed1a41766f374ac761027f565b905060005b835181101561024257826001600160a01b031663cd1b72c48287848151811061015f5761015f6107e8565b60200260200101516040518363ffffffff1660e01b81526004016101849291906107fe565b600060405180830381600087803b15801561019e57600080fd5b505af11580156101b2573d6000803e3d6000fd5b50505050816001600160a01b0316633a727344828684815181106101d8576101d86107e8565b60200260200101516040518363ffffffff1660e01b81526004016101fd92919061081c565b600060405180830381600087803b15801561021757600080fd5b505af115801561022b573d6000803e3d6000fd5b50505050808061023a90610851565b915050610134565b5050505050919050565b60606102788383604051602001610264929190610878565b60405160208183030381529060405261009d565b9392505050565b604051637defd0f560e11b81526004810182905260009081906001600160a01b0385169063fbdfa1ea90602401600060405180830381865afa1580156102c9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102f19190810190610932565b9050805160000361033c5760405162461bcd60e51b81526020600482015260116024820152701a59081b9bdd081c9959da5cdd195c9959607a1b604482015260640160405180910390fd5b61035d81600081518110610352576103526107e8565b602002602001015190565b949350505050565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff8111828210171561039e5761039e610365565b60405290565b6040805190810167ffffffffffffffff8111828210171561039e5761039e610365565b604051601f8201601f1916810167ffffffffffffffff811182821017156103f0576103f0610365565b604052919050565b6000602080838503121561040b57600080fd5b823567ffffffffffffffff8082111561042357600080fd5b818501915085601f83011261043757600080fd5b81358181111561044957610449610365565b61045b601f8201601f191685016103c7565b9150808252868482850101111561047157600080fd5b8084840185840137600090820190930192909252509392505050565b600060208083528351808285015260005b818110156104ba5785810183015185820160400152820161049e565b506000604082860101526040601f19601f8301168501019250505092915050565b600067ffffffffffffffff8211156104f5576104f5610365565b5060051b60200190565b600082601f83011261051057600080fd5b81356020610525610520836104db565b6103c7565b82815260079290921b8401810191818101908684111561054457600080fd5b8286015b8481101561059757608081890312156105615760008081fd5b61056961037b565b8135815284820135858201526040808301359082015260608083013590820152835291830191608001610548565b509695505050505050565b60008060408084860312156105b657600080fd5b833567ffffffffffffffff808211156105ce57600080fd5b818601915086601f8301126105e257600080fd5b813560206105f2610520836104db565b82815260069290921b8401810191818101908a84111561061157600080fd5b948201945b838610156106515786868c03121561062e5760008081fd5b6106366103a4565b86358152838701358482015282529486019490820190610616565b9750508701359350508083111561066757600080fd5b5050610675858286016104ff565b9150509250929050565b600082601f83011261069057600080fd5b815160206106a0610520836104db565b82815260079290921b840181019181810190868411156106bf57600080fd5b8286015b8481101561059757608081890312156106dc5760008081fd5b6106e461037b565b81518152848201518582015260408083015190820152606080830151908201528352918301916080016106c3565b600080604080848603121561072657600080fd5b835167ffffffffffffffff8082111561073e57600080fd5b818601915086601f83011261075257600080fd5b81516020610762610520836104db565b82815260069290921b8401810191818101908a84111561078157600080fd5b948201945b838610156107c15786868c03121561079e5760008081fd5b6107a66103a4565b86518152838701518482015282529486019490820190610786565b918901519197509094505050808311156107da57600080fd5b50506106758582860161067f565b634e487b7160e01b600052603260045260246000fd5b82815260608101610278602083018480518252602090810151910152565b82815260a081016102786020830184805182526020810151602083015260408101516040830152606081015160608301525050565b60006001820161087157634e487b7160e01b600052601160045260246000fd5b5060010190565b60408082528351828201819052600091906020906060850190828801855b828110156108c3576108b384835180518252602090810151910152565b9285019290840190600101610896565b50505084810382860152855180825290820192508582019060005b8181101561092557610912858451805182526020810151602083015260408101516040830152606081015160608301525050565b60809490940193918301916001016108de565b5092979650505050505050565b6000602080838503121561094557600080fd5b825167ffffffffffffffff81111561095c57600080fd5b8301601f8101851361096d57600080fd5b805161097b610520826104db565b81815260059190911b8201830190838101908783111561099a57600080fd5b928401925b828410156109b85783518252928401929084019061099f565b97965050505050505056fea264697066735822122020a64bbe4fa9ac9ae13c64c1fd9644dbe2e8759d37a30aff5eb1f0d1febdbfee64736f6c63430008100033";

type TerrainSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TerrainSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TerrainSystem__factory extends ContractFactory {
  constructor(...args: TerrainSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TerrainSystem";
  }

  deploy(
    _world: string,
    _components: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TerrainSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<TerrainSystem>;
  }
  getDeployTransaction(
    _world: string,
    _components: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  attach(address: string): TerrainSystem {
    return super.attach(address) as TerrainSystem;
  }
  connect(signer: Signer): TerrainSystem__factory {
    return super.connect(signer) as TerrainSystem__factory;
  }
  static readonly contractName: "TerrainSystem";
  public readonly contractName: "TerrainSystem";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TerrainSystemInterface {
    return new utils.Interface(_abi) as TerrainSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TerrainSystem {
    return new Contract(address, _abi, signerOrProvider) as TerrainSystem;
  }
}
